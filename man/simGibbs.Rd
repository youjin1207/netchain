% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simGibbs.R
\name{simGibbs}
\alias{simGibbs}
\title{Generate binary (\strong{Y}, \strong{A}, \strong{C}) from chain graph model under simplest scenario.}
\usage{
simGibbs(n.unit, n.obs, weight.matrix, treat.matrix, cov.matrix,
  init.prob = 0.5, treat.prob = 0.5, cov.prob = 0.5, n.burn = 100)
}
\arguments{
\item{n.unit}{the number of units (\code{m}).}

\item{n.obs}{the number of independent observations (\code{n}).}

\item{weight.matrix}{a \code{[m x m]} symmetric relational matrix where \eqn{W_ij = 1} indicates the existence of undirected edges between \eqn{Y_i} and \eqn{Y_j} and its magnitude. Here \eqn{W_ii} represents the main effect of \eqn{Y_i}.}

\item{treat.matrix}{a \code{[m x m]} matrix where \eqn{treat.matrix_ij} indicates the magnitude of direct effect from \eqn{A_i} to \eqn{Y_j}.}

\item{cov.matrix}{a \code{[m x m]} matrix where \eqn{treat.matrix_ij} indicates the magnitude of direct effect from \eqn{C_i} to \eqn{Y_j}.}

\item{init.prob}{an initial probability generating (\strong{Y}, \strong{A}, \strong{C}) from Bernoulli distribution.}

\item{treat.prob}{a probability updating \strong{A} in Gibbs sampling procedure.}

\item{cov.prob}{a probability updating \strong{C} in Gibbs sampling procedure.}

\item{n.burn}{the number of burn-in sample in Gibbs sampling (\eqn{\ge} \code{n.obs}).}
}
\value{
a list of \code{[n.obs]} independent observations:
\item{\code{inputY}}{a \code{[n.obs x m]} matrix for outcomes.}
\item{\code{inputA}}{a \code{[n.obs x m]} matrix for treatments.}
\item{\code{inputC}}{a \code{[n.obs x m]} matrix for confounders.}
}
\description{
Generate binary (\strong{Y}, \strong{A}, \strong{C}) from chain graph model under simplest scenario.
}
\examples{
library(netchain)
weight.matrix = matrix(c(0.5, 1, 0, 1, 0.3, 0.5, 0, 0.5, -0.5), 3, 3)
simobs = simGibbs(n.unit = 3, n.obs = 200, 
                  weight.matrix,
                  treat.matrix = 0.5*diag(3), cov.matrix= (-0.3)*diag(3) )
result = simobs
inputY = result$inputY
inputA = result$inputA
inputC = result$inputC

}
